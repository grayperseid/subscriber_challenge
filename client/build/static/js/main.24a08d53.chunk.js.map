{"version":3,"sources":["components/LoadingSpinner/LoadingSpinner.jsx","components/LoadingSpinner/index.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","services/subscriber.js","components/AddSubscriberModal/index.js","components/AddSubscriberModal/AddSubscriberModal.jsx","components/SubscriberStatusModal/index.js","components/SubscriberStatusModal/SubscriberStatusModal.jsx","components/StatusPill/index.js","components/StatusPill/StatusPill.jsx","components/SubscriberTable/SubscriberTable.jsx","components/SubscriberTable/index.js","components/TablePagination/TablePagination.jsx","components/TablePagination/index.js","App.js","index.js"],"names":["LoadingSpinner","props","className","cx","color","xmlns","fill","viewBox","cy","r","stroke","strokeWidth","d","defaultProps","undefined","SecondaryButton","children","loading","disabled","rest","type","PrimaryButton","ModalBody","ModalFooter","Modal","modalTitle","showModal","onCloseModal","onClick","axios","require","AddSubscriberModal","isOpen","onClose","onSuccess","useState","isSaving","setIsSaving","email","setEmail","name","setName","error","setError","handleChange","e","target","value","style","htmlFor","placeholder","onChange","payload","headers","post","createSubscriber","then","catch","response","data","message","finally","SubscriberStatusModal","subscriberId","status","isDeleting","setIsDeleting","modalTitleText","messageBodyText","buttonText","patch","updateSubscriber","StatusPill","toLowerCase","classNames","startsWith","SubscriberTable","subscribers","onChangeStatusSelected","scope","map","subscriber","id","leftChevron","aria-hidden","fillRule","clipRule","rightChevron","TablePagination","pagination","onPageSelected","renderLinks","page","totalPages","total_pages","maxLinks","startNum","links","i","push","aria-current","Fragment","insideCard","total","nextPage","prevPage","aria-label","renderPagination","App","useQueryParam","withDefault","NumberParam","setPage","perPage","showAddModal","setShowAddModal","focusedSubscriberId","setFocusedSubscriberId","focusedSubscriberStatus","setFocusedSubscriberStatus","setSubscribers","setPagination","isLoading","setIsLoading","refreshSubscribers","useCallback","params","per_page","get","getSubscribers","console","useEffect","ReactDOM","render","ReactRouterRoute","navigate","useNavigate","location","useLocation","history","React","useMemo","replace","state","document","getElementById"],"mappings":"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","file":"static/js/main.24a08d53.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nconst LoadingSpinner = (props) => (\n  <svg\n    className={cx('animate-spin', props.className, 'h-5 w-5', `text-${props.color}`)}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n  >\n    <circle\n      className=\"opacity-25\"\n      cx={12}\n      cy={12}\n      r={10}\n      stroke=\"currentColor\"\n      strokeWidth={4}\n    />\n    <path\n      className=\"opacity-75\"\n      fill=\"currentColor\"\n      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n    />\n  </svg>\n);\n\nLoadingSpinner.propTypes = {\n  color: PropTypes.string,\n  className: PropTypes.string\n}\n\nLoadingSpinner.defaultProps = {\n  color: 'gray-900',\n  className: undefined,\n};\n\nexport default LoadingSpinner;\n","import LoadingSpinner from './LoadingSpinner';\n\nexport default LoadingSpinner","import React from 'react'\nimport cx from 'classnames'\nimport LoadingSpinner from '../LoadingSpinner';\n\nexport function SecondaryButton({ children, className, loading, disabled, ...rest }) {\n  return (\n    <button\n      type=\"button\"\n      className={\n        cx(\n          \"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\",\n          className\n        )}\n      disabled={disabled || loading}\n      {...rest}\n    >\n      {loading && <LoadingSpinner className=\"mr-3\" color=\"white\" />}\n      {children}\n    </button>\n  )\n}\n\nexport function PrimaryButton({ children, className, loading, disabled, ...rest }) {\n  return (\n    <button\n      type=\"button\"\n      className={\n        cx(\n          \"relative inline-flex items-center px-4 py-2 border border-blue-300 text-sm font-medium rounded-md bg-blue-500 hover:bg-blue-700 text-white\",\n          className\n        )}\n      disabled={disabled || loading}\n      {...rest}\n    >\n      {loading && <LoadingSpinner className=\"mr-3\" color=\"white\" />}\n      {children}\n    </button>\n  )\n}","import React from \"react\";\n\nexport function ModalBody({ children }) {\n  return (\n    <div className=\"relative p-6 flex-auto\">\n      {children}\n    </div>\n  )\n}\n\nexport function ModalFooter({ children }) {\n  return (\n    <div className=\"flex items-center justify-end p-6 border-t border-solid border-blueGray-200 rounded-b\">\n      {children}\n    </div>\n  )\n}\n\nexport function Modal({ modalTitle, children, showModal, onCloseModal }) {\n  return (\n    <>\n      {showModal ? (\n        <>\n          <div\n            className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\n          >\n            <div className=\"relative my-6 mx-auto w-full max-w-md\">\n              <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\n                <div className=\"flex items-start justify-between p-5 border-b border-solid border-blueGray-200 rounded-t\">\n                  <h3 className=\"text-2xl font-semibold\">\n                    {modalTitle}\n                  </h3>\n                  <button\n                    className=\"p-1 ml-auto bg-transparent border-0 text-black float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\n                    onClick={onCloseModal}\n                  >\n                    <span className=\"bg-transparent text-black opacity-3 h-6 w-6 text-1xl block outline-none focus:outline-none\">\n                      ×\n                    </span>\n                  </button>\n                </div>\n                {children}\n              </div>\n            </div>\n          </div>\n          <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\n        </>\n      ) : null}\n    </>\n  );\n}\n","const axios = require('axios');\n\nexport const getSubscribers = (params = {}) => {\n  const headers = {\n    'Content-Type': 'application/json'\n  }\n\n  return axios.get('/api/subscribers', {\n    params: params,\n    headers: headers\n  })\n}\n\nexport const createSubscriber = (payload = {}) => {\n  const headers = {\n    'Content-Type': 'application/json'\n  }\n\n  return axios.post('/api/subscribers', payload, {\n    headers: headers\n  })\n}\n\nexport const updateSubscriber = (subscriberId, payload = {}) => {\n  const headers = {\n    'Content-Type': 'application/json'\n  }\n\n  return axios.patch(`/api/subscribers/${subscriberId}`, payload, {\n    headers: headers\n  })\n}\n","import AddSubscriberModal from \"./AddSubscriberModal\"\n\nexport default AddSubscriberModal","import { useState } from \"react\";\nimport PropTypes from 'prop-types'\nimport Button, { SecondaryButton } from '../Button'\nimport Modal, { ModalBody, ModalFooter } from '../Modal'\n\nimport { createSubscriber } from \"../../services/subscriber\";\n\nconst AddSubscriberModal = (props) => {\n  const { isOpen, onClose, onSuccess } = props\n  const [isSaving, setIsSaving] = useState(false)\n  const [email, setEmail] = useState('')\n  const [name, setName] = useState('')\n  const [error, setError] = useState('')\n\n  const handleChange = (e) => {\n    const { target: { name, value }} = e\n\n    if (name === 'email') {\n      setEmail(value)\n    } else if (name === 'name') {\n      setName(value)\n    }\n  }\n  const onSubmit = () => {\n    const payload = {\n      email,\n      name\n    }\n\n    setIsSaving(true)\n    createSubscriber(payload)\n    .then(() => {\n      onSuccess()\n    })\n    .catch((payload) => {\n      const error = payload?.response?.data?.message || 'Unable to add subscriber, please try again.'\n      setError(error)\n    })\n    .finally(() => {\n      setIsSaving(false)\n    })\n  }\n\n  return (\n    <Modal modalTitle=\"Add Subscriber\" showModal={isOpen} onCloseModal={onClose}>\n      <>\n        <ModalBody>\n          { error &&\n            <div style={{color: 'red'}}>{error}</div>\n          }\n          <form className=\"my-4 text-blueGray-500 text-lg leading-relaxed\">\n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"email\">\n                Email*\n              </label>\n              <input\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"rickc137@citadel.com\"\n                onChange={handleChange}\n                value={email}\n              />\n            </div>\n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"name\">\n                Name\n              </label>\n              <input\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                name=\"name\"\n                type=\"text\"\n                placeholder=\"Rick Sanchez\"\n                onChange={handleChange}\n                value={name}\n              />\n            </div>\n          </form>\n        </ModalBody>\n        <ModalFooter>\n          <SecondaryButton\n            className=\"background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1\"\n            type=\"button\"\n            onClick={onClose}\n          >\n            Cancel\n          </SecondaryButton>\n          <Button\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold uppercase\"\n            type=\"button\"\n            onClick={onSubmit}\n            loading={isSaving}\n          >\n            Add Subscriber\n          </Button>\n        </ModalFooter>\n      </>\n    </Modal>\n  );\n}\n\nAddSubscriberModal.propTypes = {\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func,\n  onSuccess: PropTypes.func\n}\n\nexport default AddSubscriberModal\n","import SubscriberStatusModal from './SubscriberStatusModal';\n\nexport default SubscriberStatusModal;\n","import { useState } from \"react\";\nimport Modal, { ModalBody, ModalFooter } from '../Modal'\nimport PropTypes from 'prop-types';\n\n// Components\nimport Button, { SecondaryButton } from '../Button';\n\n// Services\nimport { updateSubscriber } from \"../../services/subscriber\";\n\nconst SubscriberStatusModal = (props) => {\n  const { isOpen, onSuccess, onClose, subscriberId, status } = props;\n  const [isDeleting, setIsDeleting] = useState(false)\n  const [error, setError] = useState('')\n\n  const onUpdate = () => {\n    const payload = {\n      status: status === 'active' ? 'inactive' : 'active'\n    }\n\n    setIsDeleting(true)\n    updateSubscriber(subscriberId, payload)\n    .then(() => {\n      onSuccess()\n    })\n    .catch((payload) => {\n      const error = payload?.response?.data?.message || 'Unable to update subscriber, please try again.'\n      setError(error)\n    })\n    .finally(() => {\n      setIsDeleting(false)\n    })\n  }\n\n  const modalTitleText = status === 'active' ?\n    \"Unsubscribe\" : \"Resubscribe\"\n  const messageBodyText = status === 'active' ?\n    \"Are you sure you'd like to unsubscribe this subscriber?\" :\n    \"Are you sure you'd like to resubscribe this subscriber?\"\n  const buttonText = status === 'active' ?\n    \"Unsubscribe\" : \"Resubscribe\"\n\n  return (\n    <Modal modalTitle={modalTitleText} showModal={isOpen} onCloseModal={onClose}>\n      <>\n        <ModalBody>\n          { error &&\n            <div style={{color: 'red'}}>{error}</div>\n          }\n          {messageBodyText}\n        </ModalBody>\n        <ModalFooter>\n          <SecondaryButton\n            className=\"mx-2\"\n            onClick={onClose}\n          >\n            Cancel\n          </SecondaryButton>\n          <Button\n            type=\"primary\"\n            loading={isDeleting}\n            onClick={onUpdate}\n          >\n            {buttonText}\n          </Button>\n        </ModalFooter>\n      </>\n    </Modal>\n  );\n};\n\nSubscriberStatusModal.propTypes = {\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func,\n  onSuccess: PropTypes.func,\n  subscriberId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  status: PropTypes.string\n}\n\nexport default SubscriberStatusModal;\n","import { StatusPill } from './StatusPill'\n\nexport default StatusPill","import classNames from 'classnames'\n\nexport function StatusPill({ value }) {\n  const status = value ? value.toLowerCase() : \"unknown\";\n\n  return (\n    <span\n      className={\n        classNames(\n          \"px-3 py-1 uppercase leading-wide font-bold text-xs rounded-full shadow-sm\",\n          status.startsWith(\"active\") ? \"bg-green-100 text-green-800\" : null,\n          status.startsWith(\"inactive\") ? \"bg-yellow-100 text-yellow-800\" : null\n        )\n      }\n    >\n      {status}\n    </span>\n  );\n};","import PropTypes from 'prop-types';\nimport StatusPill from '../StatusPill'\n\nconst SubscriberTable = (props) => {\n  const { subscribers, onChangeStatusSelected } = props\n\n  return (\n    <div className=\"flex flex-col\">\n      <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n        <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n          <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th\n                    scope=\"col\"\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                  >\n                    Name\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                  >\n                    Email\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                  >\n                    Status\n                  </th>\n                  <th scope=\"col\" className=\"relative px-6 py-3\">\n                    <span className=\"sr-only\">Edit</span>\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {subscribers.map((subscriber) => (\n                  <tr key={subscriber.id}>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900\">{subscriber.name}</div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"text-sm text-gray-900\">{subscriber.email}</div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <StatusPill value={subscriber.status} />\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                      <button className=\"text-primary-gold-600 hover:text-primary-gold-900 underline\" onClick={() => onChangeStatusSelected(subscriber.id, subscriber.status)}>\n                        {subscriber.status === 'active' ? 'Unsubscribe' : 'Subscribe'}\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nSubscriberTable.propTypes = {\n  subscribers: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      email: PropTypes.string,\n      name: PropTypes.string,\n      status: PropTypes.string\n    })\n  ),\n  onChangeStatusSelected: PropTypes.func\n}\n\nSubscriberTable.defaultProps = {\n  subscribers: [],\n  onChangeStatusSelected: () => {}\n}\n\nexport default SubscriberTable","import SubscriberTable from './SubscriberTable'\n\nexport default SubscriberTable","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nconst leftChevron = (\n  <svg className=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n    <path fillRule=\"evenodd\" d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n  </svg>\n)\n\nconst rightChevron = (\n  <svg className=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n    <path fillRule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\n  </svg>\n)\n\nconst TablePagination = (props) => {\n  const { pagination, onPageSelected } = props\n\n  const renderLinks = () => {\n    const page = pagination?.page\n    const totalPages = pagination?.total_pages\n    const maxLinks = totalPages > 5 ? 5 : totalPages\n\n    let startNum = 1\n    if (page > 2 && totalPages > 5) {\n      startNum = (page - 2)\n    }\n\n    const links = []\n\n    const currentClassName = \"z-10 bg-primary-gold-50 border-primary-gold-500 text-primary-gold-600 relative inline-flex items-center px-4 py-2 border text-sm font-medium\"\n    const regularClassName = \"bg-white border-gray-300 text-gray-500 hover:bg-gray-50 relative inline-flex items-center px-4 py-2 border text-sm font-medium\"\n\n    for (let i = startNum; i < (startNum + maxLinks); i++) {\n      if (i <= totalPages) {\n        links.push(\n          <button key={`page-${i}`} aria-current={i === page} className={i === page ? currentClassName : regularClassName} onClick={() => onPageSelected(i)}>\n            {i}\n          </button>\n        )\n      }\n    }\n\n    return (\n      <React.Fragment>\n        {links}\n      </React.Fragment>\n    )\n  }\n\n  const renderPagination = () => {\n    const { insideCard } = props\n    const total = pagination?.total\n    const page = pagination?.page\n    const totalPages = pagination?.total_pages\n    const nextPage = (page + 1) > totalPages ? totalPages : (page + 1)\n    const prevPage = (page - 1) < 1 ? 1 : (page - 1)\n\n    return (\n      <div className={cx(\"py-3 flex items-center justify-between\", insideCard ? \"bg-white border-t border-gray-200\" : \"\")}>\n        <div className=\"flex-1 flex justify-between sm:hidden\">\n          <button className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\" onClick={() => onPageSelected(prevPage)}>\n            Previous\n          </button>\n          <button className=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\" onClick={() => onPageSelected(nextPage)}>\n            Next\n          </button>\n        </div>\n        <div className=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\n          <div>\n            <p className=\"text-sm text-gray-700\">\n              <span className=\"font-medium\">{total}&nbsp;</span>\n              results\n            </p>\n          </div>\n          <div>\n            <nav className=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\" aria-label=\"Pagination\">\n              <button className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\" onClick={() => onPageSelected(prevPage)}>\n                <span className=\"sr-only\">Previous</span>\n                {leftChevron}\n              </button>\n              {renderLinks()}\n              <button className=\"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\" onClick={() => onPageSelected(nextPage)}>\n                <span className=\"sr-only\">Next</span>\n                {rightChevron}\n              </button>\n            </nav>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return renderPagination()\n}\n\nTablePagination.propTypes = {\n  className: PropTypes.string,\n  onPageSelected: PropTypes.func,\n  pagination: PropTypes.shape({\n    page: PropTypes.number,\n    per_page: PropTypes.number,\n    total: PropTypes.number,\n    total_pages: PropTypes.number\n  }),\n  insideCard: PropTypes.bool\n}\n\nTablePagination.defaultProps = {\n  pagination: {},\n  insideCard: false\n}\n\nexport default TablePagination\n","import TablePagination from './TablePagination'\n\nexport default TablePagination","import React, { useState, useEffect, useCallback } from 'react'\nimport { useQueryParam, NumberParam, withDefault } from 'use-query-params';\n\nimport { SecondaryButton } from './components/Button'\nimport AddSubscriberModal from './components/AddSubscriberModal'\nimport SubscriberStatusModal from './components/SubscriberStatusModal'\nimport SubscriberTable from './components/SubscriberTable'\nimport TablePagination from './components/TablePagination'\nimport LoadingSpinner from './components/LoadingSpinner'\n\n// Services\nimport { getSubscribers } from './services/subscriber'\n\n// Styles\nimport './App.css';\n\nfunction App() {\n  const [page, setPage] = useQueryParam(\n    'page',\n    withDefault(NumberParam, 1)\n  );\n  const [perPage] = useQueryParam(\n    'perPage',\n    withDefault(NumberParam, 5)\n  );\n  const [showAddModal, setShowAddModal] = useState(false)\n  const [focusedSubscriberId, setFocusedSubscriberId] = useState('')\n  const [focusedSubscriberStatus, setFocusedSubscriberStatus] = useState('')\n  const [subscribers, setSubscribers] = useState([])\n  const [pagination, setPagination] = useState({})\n  const [isLoading, setIsLoading] = useState(false)\n\n  const refreshSubscribers = useCallback(() => {\n    const params = {\n      page,\n      per_page: perPage\n    }\n\n    setIsLoading(true)\n    getSubscribers(params)\n    .then((payload) => {\n      const subscribers = payload?.data?.subscribers || []\n      const pagination = payload?.data?.pagination || {}\n\n      setSubscribers(subscribers)\n      setPagination(pagination)\n    })\n    .catch((payload) => {\n      const error = payload?.response?.data?.message || 'Something went wrong'\n      console.error(error)\n    })\n    .finally(() => {\n      setIsLoading(false)\n    })\n  }, [page, perPage]);\n\n  useEffect(() => {\n    refreshSubscribers()\n  }, [refreshSubscribers]);\n\n  const onPageSelected = (page) => {\n    setPage(page)\n  }\n\n  const onOpenAddSubscriber = () => {\n    setShowAddModal(true)\n  }\n\n  const onCloseAddSubscriberModal = () => {\n    setShowAddModal(false)\n  }\n\n  const onSuccessAddSubscriber = () => {\n    refreshSubscribers()\n    setShowAddModal(false)\n  }\n\n  const onUpdateStatusSelectected = (subscriberId, status) => {\n    setFocusedSubscriberId(subscriberId)\n    setFocusedSubscriberStatus(status)\n  }\n\n  const onCloseUpdateStatusSubscriberModal = () => {\n    setFocusedSubscriberId('')\n    setFocusedSubscriberStatus('')\n  }\n\n  const onSuccessUpdateStatusSubscriber = () => {\n    refreshSubscribers()\n    setFocusedSubscriberId('')\n    setFocusedSubscriberStatus('')\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 text-gray-900\">\n      <main className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\">\n        <AddSubscriberModal\n          isOpen={showAddModal}\n          onClose={onCloseAddSubscriberModal}\n          onSuccess={onSuccessAddSubscriber}\n        />\n        <SubscriberStatusModal\n          isOpen={focusedSubscriberId !== '' && focusedSubscriberStatus !== ''}\n          onClose={onCloseUpdateStatusSubscriberModal}\n          onSuccess={onSuccessUpdateStatusSubscriber}\n          subscriberId={focusedSubscriberId}\n          status={focusedSubscriberStatus}\n        />\n        <div className=\"flex justify-between items-center\">\n          <h1 className=\"text-xl font-semibold flex items-center\">\n            {pagination?.total} Subscribers {isLoading && <LoadingSpinner className=\"ml-4\" />}\n          </h1>\n          <SecondaryButton onClick={onOpenAddSubscriber}>\n            Add Subscriber\n          </SecondaryButton>\n        </div>\n        <div className=\"mt-6\">\n          <SubscriberTable\n            subscribers={subscribers}\n            onChangeStatusSelected={onUpdateStatusSelectected}\n          />\n          <TablePagination pagination={pagination} onPageSelected={onPageSelected} />\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, useLocation, useNavigate } from 'react-router-dom';\nimport App from './App';\nimport {QueryParamProvider} from 'use-query-params';\n\nimport './index.css';\n\nconst RouteAdapter = ({ children }) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const adaptedHistory = React.useMemo(\n    () => ({\n      replace(location) {\n        navigate(location, { replace: true, state: location.state });\n      },\n      push(location) {\n        navigate(location, { replace: false, state: location.state });\n      },\n    }),\n    [navigate]\n  );\n  return children({ history: adaptedHistory, location });\n};\n\nReactDOM.render(\n  <Router>\n    <QueryParamProvider ReactRouterRoute={RouteAdapter}>\n      <App />\n    </QueryParamProvider>\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}